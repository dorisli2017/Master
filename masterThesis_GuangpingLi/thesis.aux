\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand*\new@tpo@label[2]{}
\catcode `"\active 
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\providecommand \oddpage@label [2]{}
\babel@aux{english}{}
\babel@aux{ngerman}{}
\babel@aux{english}{}
\babel@aux{ngerman}{}
\babel@aux{english}{}
\citation{cook1971complexity}
\citation{clarke2001bounded}
\citation{ivanvcic2008efficient}
\citation{kautz1999unifying}
\citation{mann2017guiding}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}}
\newlabel{sec:Intro}{{1}{1}{Introduction}{section.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Problem/Motivation}{1}{subsection.1.1}}
\@writefile{brf}{\backcite{cook1971complexity}{{1}{1.1}{subsection.1.1}}}
\@writefile{brf}{\backcite{clarke2001bounded}{{1}{1.1}{subsection.1.1}}}
\@writefile{brf}{\backcite{ivanvcic2008efficient}{{1}{1.1}{subsection.1.1}}}
\@writefile{brf}{\backcite{kautz1999unifying}{{1}{1.1}{subsection.1.1}}}
\@writefile{brf}{\backcite{mann2017guiding}{{1}{1.1}{subsection.1.1}}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Content}{1}{subsection.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Definitions and Notations}{1}{subsection.1.3}}
\citation{johnson1990local}
\citation{galinier2006survey}
\newlabel{table:kysymys}{{1}{2}{Definitions and Notations}{table.1}{}}
\@writefile{brf}{\backcite{johnson1990local}{{2}{1.3}{table.1}}}
\@writefile{brf}{\backcite{galinier2006survey}{{2}{1.3}{table.1}}}
\citation{glover1989tabu}
\citation{lisolving}
\citation{kirkpatrick1983optimization}
\citation{hoos2002adaptive}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Focused Local Search}}{3}{algocf.1}}
\@writefile{brf}{\backcite{glover1989tabu}{{3}{5}{algocf.1}}}
\@writefile{brf}{\backcite{lisolving}{{3}{5}{algocf.1}}}
\citation{balint2016engineering}
\@writefile{brf}{\backcite{kirkpatrick1983optimization}{{4}{5}{algocf.1}}}
\@writefile{brf}{\backcite{hoos2002adaptive}{{4}{5}{algocf.1}}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces PickVar in walkSAT}}{4}{algocf.2}}
\@writefile{brf}{\backcite{balint2016engineering}{{4}{4}{algocf.2}}}
\citation{nieuwenhuis2005abstract}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces PickVar in \emph  {probSAT}}}{5}{algocf.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces In a hypergraph, a hyperedge is a set of vertices. In this example, the vertices $v_3$ and $v_4$ are in both hyperedge $\{v_1, v_3, v_4\}$ and $\{v_1, v_2, v_3\}$, so they are connected twice. In our hypergraph representation, a hyperedge contains the vertices of the corresponding clauses. In another variant, each literal refers to one vertex and a hyperedge contains all the literals of the corresponding clause.}}{5}{figure.1}}
\newlabel{hypergraph representation}{{1}{5}{In a hypergraph, a hyperedge is a set of vertices. In this example, the vertices $v_3$ and $v_4$ are in both hyperedge $\{v_1, v_3, v_4\}$ and $\{v_1, v_2, v_3\}$, so they are connected twice. In our hypergraph representation, a hyperedge contains the vertices of the corresponding clauses. In another variant, each literal refers to one vertex and a hyperedge contains all the literals of the corresponding clause}{figure.1}{}}
\@writefile{brf}{\backcite{nieuwenhuis2005abstract}{{5}{3}{figure.1}}}
\citation{biere2014yet}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}The Competitors}{6}{subsection.1.4}}
\newlabel{comparision}{{1.4}{6}{The Competitors}{subsection.1.4}{}}
\@writefile{brf}{\backcite{biere2014yet}{{6}{1.4}{subsection.1.4}}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces probSAT}}{6}{table.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Our local Solver}{7}{section.2}}
\newlabel{sec:local}{{2}{7}{Our local Solver}{section.2}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces Our Local Search}}{7}{algocf.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}initAssign(F)}{7}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}pickCla(A)}{7}{subsection.2.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}pickVar(A,c)}{8}{subsection.2.3}}
\@writefile{loa}{\contentsline {algocf}{\numberline {5}{\ignorespaces Our pickVar}}{8}{algocf.5}}
\@writefile{loa}{\contentsline {algocf}{\numberline {6}{\ignorespaces Walk}}{8}{algocf.6}}
\@writefile{loa}{\contentsline {algocf}{\numberline {7}{\ignorespaces GreedyBreak}}{9}{algocf.7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}pickVar(A,c) with simulated annealing}{9}{subsection.2.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Data structures}{10}{subsection.2.5}}
\newlabel{subsec:Data structures}{{2.5}{10}{Data structures}{subsection.2.5}{}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces probSAT}}{10}{table.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6}Our swpSAT solver}{10}{subsection.2.6}}
\newlabel{subsec:swpSAT}{{2.6}{10}{Our swpSAT solver}{subsection.2.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Our Parallel Algorithm}{11}{section.3}}
\newlabel{sec:parallel}{{3}{11}{Our Parallel Algorithm}{section.3}{}}
\newlabel{sec:Our parallel Algorithm}{{3}{11}{Our Parallel Algorithm}{section.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}1st Approach: The pure portfolio approach}{11}{subsection.3.1}}
\@writefile{loa}{\contentsline {algocf}{\numberline {8}{\ignorespaces Pure portfolio approach}}{11}{algocf.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}2nd Approach: Solver with formula partitioning}{11}{subsection.3.2}}
\newlabel{sec:2nd}{{3.2}{11}{2nd Approach: Solver with formula partitioning}{subsection.3.2}{}}
\newlabel{a2}{{2}{12}{2nd Approach: Solver with formula partitioning}{figure.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Solver with formula partitioning}}{12}{figure.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}3nd Approach: Solver with combination of sub-assignments}{12}{subsection.3.3}}
\newlabel{a2}{{3}{13}{3nd Approach: Solver with combination of sub-assignments}{figure.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}4th Approach: Initialization with a guide of formula partitioning}{13}{subsection.3.4}}
\newlabel{sec:4th}{{3.4}{13}{4th Approach: Initialization with a guide of formula partitioning}{subsection.3.4}{}}
\citation{balyo2017proceedings}
\citation{balyo2017proceedings}
\@writefile{toc}{\contentsline {section}{\numberline {4}Evaluation}{14}{section.4}}
\newlabel{sec:eva}{{4}{14}{Evaluation}{section.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}DIMACS standard format}{14}{subsection.4.1}}
\@writefile{brf}{\backcite{balyo2017proceedings}{{14}{4.1}{subsection.4.1}}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Benchmarks}{14}{subsection.4.2}}
\newlabel{benchmark}{{4.2}{14}{Benchmarks}{subsection.4.2}{}}
\@writefile{brf}{\backcite{balyo2017proceedings}{{14}{4.2}{subsection.4.2}}}
\citation{balyo2017proceedings}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Used plots and tables}{15}{subsection.4.3}}
\@writefile{brf}{\backcite{balyo2017proceedings}{{15}{4.3}{subsection.4.3}}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Random Seeds used in Experiments}{15}{subsection.4.4}}
\newlabel{sec:seed}{{4.4}{15}{Random Seeds used in Experiments}{subsection.4.4}{}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces probSAT}}{15}{table.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}Soft- and Hardware}{15}{subsection.4.5}}
\citation{SMAC}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6}Parameter Settings in Experiment}{16}{subsection.4.6}}
\@writefile{brf}{\backcite{SMAC}{{16}{4.6}{subsection.4.6}}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Settings of $\alpha $ or $\tau $ in solvers}}{16}{table.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.7}COMBINE Benchmark Generation}{16}{subsection.4.7}}
\newlabel{tab:combine big}{{5}{17}{COMBINE Benchmark Generation}{table.5}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces Caption for LOF}}{17}{table.5}}
\newlabel{tab:combine small}{{6}{18}{COMBINE Benchmark Generation}{table.6}{}}
\@writefile{lot}{\contentsline {table}{\numberline {6}{\ignorespaces COMBINE problems with small intersection ($\frac  {numCI}{numC} < 1\%$)}}{18}{table.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.8}Experiments}{19}{subsection.4.8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.8.1}Experiment 1: initAssign(F)}{19}{subsubsection.4.8.1}}
\newlabel{sec:Experiment 1}{{4.8.1}{19}{Experiment 1: initAssign(F)}{subsubsection.4.8.1}{}}
\newlabel{tab:com}{{7}{19}{Experiment 1: initAssign(F)}{table.7}{}}
\@writefile{lot}{\contentsline {table}{\numberline {7}{\ignorespaces For 3SAT problems, different initializations get similar performances. According to the PAR2-score of the benchmark sets, the two bias initiliazations show improvement of about $40\%$ percentage reduction in runtime for 5SAT problems. the \emph  {BiasInit} shows its efficiency in 7SAT problems.}}{19}{table.7}}
\newlabel{Experiment cactus}{{3}{20}{Experiment 1: initAssign(F)}{figure.3}{}}
\newlabel{Experiment 1 k357 cactus plot}{{3}{20}{Experiment 1: initAssign(F)}{figure.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Three suggestions have very similar performance for 3SAT problems. In our solver, we use \emph  {RandomInit} for 3SAT because of its simplicity. Two bias suggestions show advantages especially for huge 5SAT instances. For 7SAT problems, the two random initialization are similar in performance, while the bias initialization shows its efficiency.}}{20}{figure.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.8.2}Experiment 2: pickVar(F)}{21}{subsubsection.4.8.2}}
\newlabel{sec:Experiment 2}{{4.8.2}{21}{Experiment 2: pickVar(F)}{subsubsection.4.8.2}{}}
\newlabel{parma}{{8}{21}{Experiment 2: pickVar(F)}{table.8}{}}
\@writefile{lot}{\contentsline {table}{\numberline {8}{\ignorespaces Three clause examples in 3SAT , 5SAT and 7SAT problem with a greedy literal and other literals with breakcount 1. With the $\Gamma $ function and the recommended parameters in the original \emph  {probSAT} paper, the probabilities of literals for flipping are schown in the 3rd column.}}{21}{table.8}}
\@writefile{lot}{\contentsline {table}{\numberline {9}{\ignorespaces In the comparison with \emph  {probSAT}, our three variants of \emph  {pickVar} are faster and solve more instances in 3SAT and 5SAT. For 3SAT, our suggestions have better performances. The \emph  {Walk} and \emph  {Average} can solve more problems. The best one is the \emph  {Average}, which solves $10\%$ more problems. The \emph  {Average} also shows advantages for 5SAT problems, which can solve $8\%$ more problems than the \emph  {probSAT} using only $46\%$ time. For 7SAT, there are no noticeable differences in results.}}{21}{table.9}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Our suggestions are faster than the \emph  {probSAT} algorithm in 3SAT problems. The \emph  {Averrage} shows an improvement except for a few trivial small instances. For 5SAT problems, the improvement through our suggestions are obvious. They can efficiently solve more problems. For 7SAT problems, the \emph  {Walk} and \emph  {Average} have generally worse inperformance. The \emph  {Random-Flip} can solve the same number of problems as the original \emph  {probSAT} and has shown littel improvement in performance within $125$ seconds.}}{22}{figure.4}}
\newlabel{Experiment 2 cactus plot}{{4}{22}{Our suggestions are faster than the \emph {probSAT} algorithm in 3SAT problems. The \emph {Averrage} shows an improvement except for a few trivial small instances. For 5SAT problems, the improvement through our suggestions are obvious. They can efficiently solve more problems. For 7SAT problems, the \emph {Walk} and \emph {Average} have generally worse inperformance. The \emph {Random-Flip} can solve the same number of problems as the original \emph {probSAT} and has shown littel improvement in performance within $125$ seconds}{figure.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.8.3}Experiment 3: Simulated Annealing}{23}{subsubsection.4.8.3}}
\newlabel{sec:Experiment 3}{{4.8.3}{23}{Experiment 3: Simulated Annealing}{subsubsection.4.8.3}{}}
\@writefile{lot}{\contentsline {table}{\numberline {10}{\ignorespaces To confirm that the simulated annealing with the parameters in our experiments changes the behavior of the search, we count the number of greedy flips and the number of random flips for the whole problem set. Through our observation, using the parameters we choose, the fraction of greedy flips in total flips are changed. This table shows the values for two variants \emph  {Average} and \emph  {Random-Flip}.}}{23}{table.10}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces For 3SAT, the two combination with simulated annealing show worse performance than the original \emph  {Walk}. The combinations have shown their efficiency in solving huge 5SAT problems. The \emph  {Local} shows its advantages for 7SAT problems. }}{24}{figure.5}}
\newlabel{Experiment 3 Walk cactus plot}{{5}{24}{Experiment 3: Simulated Annealing}{figure.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces  The original \emph  {Average} can solve $15\%$ more problems in 3SAT. For 5SAT, there are not noticable differences in aspect of number of solved problems or the runtime. For 7SAT problems, the \emph  {Local} version can solve $6$ more huge problems than the original \emph  {Average} within less runtime.}}{25}{figure.6}}
\newlabel{Experiment 4 k3 cactus plot}{{6}{25}{The original \emph {Average} can solve $15\%$ more problems in 3SAT. For 5SAT, there are not noticable differences in aspect of number of solved problems or the runtime. For 7SAT problems, the \emph {Local} version can solve $6$ more huge problems than the original \emph {Average} within less runtime}{figure.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces  The performances of these three algorithms are quiet similar for 3SAT and 5SAT problems. For 7SAT set, the \emph  {Local} get worst performance while the variant \emph  {Global} has shown advantages in solving huge problems.}}{26}{figure.7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.8.4}Experiment 4: 2017-UNIF Comparision (local)}{27}{subsubsection.4.8.4}}
\newlabel{sec:Experiment 4}{{4.8.4}{27}{Experiment 4: 2017-UNIF Comparision (local)}{subsubsection.4.8.4}{}}
\newlabel{tab:UNIF}{{11}{27}{Experiment 4: 2017-UNIF Comparision (local)}{table.11}{}}
\@writefile{lot}{\contentsline {table}{\numberline {11}{\ignorespaces Comparison in UNIF}}{27}{table.11}}
\newlabel{tab:flips}{{12}{27}{Experiment 4: 2017-UNIF Comparision (local)}{table.12}{}}
\@writefile{lot}{\contentsline {table}{\numberline {12}{\ignorespaces Average flips per second}}{27}{table.12}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces \emph  {swpSAT} gets best performance in \emph  {UNIF} compared with \emph  {probSAT} and \emph  {yalSAT} }}{27}{figure.8}}
\newlabel{Experiment 9 all cactus plot}{{8}{27}{\emph {swpSAT} gets best performance in \emph {UNIF} compared with \emph {probSAT} and \emph {yalSAT}}{figure.8}{}}
\newlabel{Experiment 9 k3 cactus plot}{{9}{28}{Experiment 4: 2017-UNIF Comparision (local)}{figure.9}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.8.5}Experiment 5: The pure portfolio approach}{29}{subsubsection.4.8.5}}
\newlabel{sec:Experiment 5}{{4.8.5}{29}{Experiment 5: The pure portfolio approach}{subsubsection.4.8.5}{}}
\@writefile{lot}{\contentsline {table}{\numberline {13}{\ignorespaces Pseudo-random number generators in use. In our pure portfolio approach, we run 11 threads. Each thread uses a random generator for generation of all boolean and integer values in the whole search process.}}{29}{table.13}}
\newlabel{tab:UNIF}{{14}{29}{Experiment 5: The pure portfolio approach}{table.14}{}}
\@writefile{lot}{\contentsline {table}{\numberline {14}{\ignorespaces Our pure portfolio approach can solve more problems compared to our local \emph  {swpSolver}. The ratio of the sequential execution time to the parallel execution time is shown in the column Speedup. According to the speedup values, our pure portfolio parallel approach accelerates the process. Another metric to measure the performance of a parallel algorithm, namely efficiency, is defined as the ratio of speedup to the number of threads. The best speedup and efficiency values we got are the ones in the 7SAT problem set. }}{29}{table.14}}
\newlabel{Experiment 5 all cactus plot}{{10}{30}{Experiment 5: The pure portfolio approach}{figure.10}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces The pure portfolio approach can get better performances and efficiencies in whole problem set. Expecially for 7SAT problems, the parallel solver can solve $30\%$ more problems in the same amount of execution time. }}{30}{figure.10}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.8.6}Experiment 6: Initialization with a guide of formula partitioning}{31}{subsubsection.4.8.6}}
\newlabel{sec:Experiment 6}{{4.8.6}{31}{Experiment 6: Initialization with a guide of formula partitioning}{subsubsection.4.8.6}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {9}{\ignorespaces FineInit}}{31}{algocf.9}}
\@writefile{lot}{\contentsline {table}{\numberline {15}{\ignorespaces We compare our local swpSolver and our 4th approach of the parallel solver, which is referred as \emph  {FineInit} in this table. This approach gets a super-linear speedup thanks to the guide of formula partition information. }}{31}{table.15}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces The green curve represents the half of execution times with swpSolver. With a comparison of the swpSAT-half curve and the FineInit curve, the efficiency of our \emph  {FineInit} solver with two threads are shown in figures. Our \emph  {FineInit} solver gets a super-linear efficiency for problems even with relative big intersections.}}{32}{figure.11}}
\newlabel{Experiment 6 COMBINE}{{11}{32}{The green curve represents the half of execution times with swpSolver. With a comparison of the swpSAT-half curve and the FineInit curve, the efficiency of our \emph {FineInit} solver with two threads are shown in figures. Our \emph {FineInit} solver gets a super-linear efficiency for problems even with relative big intersections}{figure.11}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.8.7}Experiment 7:2017-UNIF Comparison (parallel)}{33}{subsubsection.4.8.7}}
\newlabel{sec:Experiment 7}{{4.8.7}{33}{Experiment 7:2017-UNIF Comparison (parallel)}{subsubsection.4.8.7}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {10}{\ignorespaces Our parallel solver}}{33}{algocf.10}}
\@writefile{lot}{\contentsline {table}{\numberline {16}{\ignorespaces With the increment of the number of threads, our solver can solve more problems.}}{33}{table.16}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces For 3SAT and 5SAT problems, the more threads the solver spawns, the more problems are solved. The time used for solving small and medium problems are quite similar. For 7SAT problems, our parallel solver shows advantages in terms of both the number of solved problems and the runtime.}}{34}{figure.12}}
\newlabel{Experiment 6 COMBINE}{{12}{34}{For 3SAT and 5SAT problems, the more threads the solver spawns, the more problems are solved. The time used for solving small and medium problems are quite similar. For 7SAT problems, our parallel solver shows advantages in terms of both the number of solved problems and the runtime}{figure.12}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Conclusion}{35}{section.5}}
\newlabel{sec:conc}{{5}{35}{Conclusion}{section.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Further work}{35}{subsection.5.1}}
\bibstyle{ieeetr}
\bibdata{references}
\bibcite{cook1971complexity}{1}
\bibcite{clarke2001bounded}{2}
\bibcite{ivanvcic2008efficient}{3}
\bibcite{kautz1999unifying}{4}
\bibcite{mann2017guiding}{5}
\bibcite{johnson1990local}{6}
\bibcite{galinier2006survey}{7}
\bibcite{glover1989tabu}{8}
\bibcite{lisolving}{9}
\bibcite{kirkpatrick1983optimization}{10}
\bibcite{hoos2002adaptive}{11}
\bibcite{balint2016engineering}{12}
\bibcite{nieuwenhuis2005abstract}{13}
\bibcite{biere2014yet}{14}
\bibcite{balyo2017proceedings}{15}
\bibcite{SMAC}{16}
\@writefile{toc}{\contentsline {section}{\numberline {6}Bibliography}{36}{section.6}}
\global\@namedef{scr@dte@section@lastmaxnumwidth}{11.8799pt}
\global\@namedef{scr@dte@subsection@lastmaxnumwidth}{19.71382pt}
\global\@namedef{scr@dte@subsubsection@lastmaxnumwidth}{28.8528pt}
